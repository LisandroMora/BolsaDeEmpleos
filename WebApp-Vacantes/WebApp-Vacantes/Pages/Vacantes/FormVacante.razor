@using System.IO
@using Microsoft.AspNetCore.Hosting
@using System.Web.Mvc
@inject HttpClient Http 
@inject IWebHostEnvironment env

<EditForm Model="@Trabajos" OnValidSubmit="@OnValidSubmit">
    <div class="form-group">
        <div class="form-control">
            <label>Categoria: </label>
            <InputSelect @bind-Value="@Trabajos.IdCategoria">
                @foreach (var dept in categoriasList)
                {
                    <option value="@dept.IdCategoria">@dept.Nombre</option>
                }
            </InputSelect>
        </div>
        <div class="form-control">
            <label>Fecha: </label>
            <InputDate @bind-Value="@Trabajos.Fecha"></InputDate>
            <ValidationMessage For="@(()=>Trabajos.Fecha)" />
        </div>
        <div class="form-control">
            <label>Ubicacion: </label>
            <InputText @bind-Value="@Trabajos.Ubicacion"></InputText>
            <ValidationMessage For="@(()=>Trabajos.Ubicacion)" />
        </div>
        <div class="form-control">
            <label>Posicion: </label>
            <InputText @bind-Value="@Trabajos.Posicion"></InputText>
            <ValidationMessage For="@(()=>Trabajos.Posicion)" />
        </div>
        <div class="form-control">
            <label>Empresa: </label>
            <InputText @bind-Value="@Trabajos.Empresa"></InputText>
            <ValidationMessage For="@(()=>Trabajos.Empresa)" />
        </div>
        <div class="form-control">
            <label>Tipo: </label>
            <InputNumber @bind-Value="@Trabajos.IdTipo"></InputNumber>
            <ValidationMessage For="@(()=>Trabajos.IdTipo)" />
        </div>
        <div class="form-control">
            <label>Descripcion: </label>
            <InputText @bind-Value="@Trabajos.Descripcion"></InputText>
            <ValidationMessage For="@(()=>Trabajos.Descripcion)" />
        </div>
        <div class="form-control">
            <label>Email: </label>
            <InputText @bind-Value="@Trabajos.Email"></InputText>
            <ValidationMessage For="@(()=>Trabajos.Email)" />
        </div>
        <div class="form-control">
            <label>Como Aplicar: </label>
            <InputText @bind-Value="@Trabajos.ComoAplicar"></InputText>
            <ValidationMessage For="@(()=>Trabajos.ComoAplicar)" />
        </div>
        <div class="form-control">
            <label>Como Aplicar: </label>
            <InputFile OnChange="@OnInputFileChange" @bind-Value="selectedFiles"/>
        </div>
    </div>
    <button type="submit" class="btn btn-success">@TextBtn</button>
    <DataAnnotationsValidator />
</EditForm>
@*@attribute [Authorize(Roles = "admin, postulante")]*@


@code {

    [Parameter] public Trabajos Trabajos { get; set; } = new Trabajos();
    [Parameter] public string TextBtn { get; set; } = "Guardar Cambios";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public IBrowserFile selectedFiles { get; set; }

    Categoria[] categorias { get; set; }

    List<Categoria> categoriasList = new List<Categoria>();


    protected override async Task OnInitializedAsync()
    {
        await CargarCategorias();
    }

    async Task CargarCategorias()
    {
        categorias = await Http.GetFromJsonAsync<Categoria[]>("/api/Categoria");
        int k = 0;

        categoriasList = new List<Categoria>(categorias);

        //foreach (Categoria items in categoriasList)
        //{
        //    categoriasList.Add(categorias[k]);
        //    k++;
        //}

        //CategoriasList = categorias.ToList().ConvertAll(categoria =>
        //{
        //    return new SelectListItem()
        //    {
        //        Text = categoria.Nombre.ToString(),
        //        Value = categoria.IdCategoria.ToString(),
        //        Selected = false
        //    };
        //});
    }

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.File;
        this.StateHasChanged();
        OnSubmitFile();
    }

    private async void OnSubmitFile()
    {
        Stream stream = selectedFiles.OpenReadStream();
        var path = $"{env.WebRootPath}\\logos\\{selectedFiles.Name}";
        Trabajos.UrlString = selectedFiles.Name;
        FileStream fs = File.Create(path);
        await stream.CopyToAsync(fs);
        stream.Close();
        fs.Close();
        this.StateHasChanged();
    }

}
